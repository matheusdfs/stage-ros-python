show_clock 0
show_clock_interval 10000
resolution 0.02
threads 4
speedup 1

define sicklaser ranger
(
  obstacle_return 1
  sensor(
    pose [ 0 0 0.1 0 ]
    fov 360
    range [ 0.0 7.0 ]
    samples 512
  )
  color "random"
  block( 
    obstacle_return 1
    points 4
    point[0] [0 0]
    point[1] [0 1]
    point[2] [1 1]
    point[3] [1 0]
    z [0 0.21]
  )
)

define floorplan model
(
  color "gray30"
  boundary 1

  gui_nose 0
  gui_grid 0
  gui_move 0
  gui_outline 0
  gripper_return 0
  fiducial_return 0
  ranger_return 0
  obstacle_return 1
)

floorplan
(
  name "blank"
  bitmap "rink.png"
  obstacle_return 1
  #size [60.000 60.000 0.800]
  #size [80.5 80.5 0.5]
  size [32.2 32.2 60.0]
  #size [16.1 16.1 0.5]
  #size [8.05 8.05 0]
  pose [0.000 0.000 0.000 0.000]

)



window
(
  size [800 800]
  
# Camera options 
  scale 20
  center [0  0]
  rotate [ 0.000  0.000 ]


# GUI options
  show_data 0
  show_flags 1
  show_blocks 1
  show_clock 1
  show_footprints 0
  show_grid 1
  show_trailarrows 0
  show_trailrise 0
  show_trailfast 0
  show_occupancy 0

)

define agent position
(
  # actual size
  size [0.36 0.36 0.22] # sizes from MobileRobots' web site

  # the pioneer's center of rotation is offset from its center of area
  origin [0 0 0 0]

  # draw a nose on the robot so we can see which way it points
  gui_nose 1

  color "random"
  drive "omni"		 	# Differential steering model.
  obstacle_return 1           	# Can hit things.
  ranger_return 7           	# reflects sonar beams
  blob_return 1               	# Seen by blobfinders  
  fiducial_return 1           	# Seen as "1" fiducial finders
  sicklaser(
	pose [ 0 0 0 0 ] 
  )
  
  # [ xmin xmax ymin ymax zmin zmax amin amax ]				
  velocity_bounds [-5.0 5.0 -5.0 5.0 0 0 -270.0 270.0 ]					
  acceleration_bounds [-3 3 -3 3 0 0 -270 270.0 ]
  )

define block model
(
  size [0.100 0.100 0.100]
  gui_nose 0
)

define destiny model
(
  size [0.500 0.500 0.100]
  gui_nose 0
)

agent( pose [ 0.0 -12.0 1.00  -270.0])
agent( pose [ 0.0 -12.0 2.00  -270.0])
agent( pose [ 0.0 -12.0 3.00  -270.0])
agent( pose [ 0.0 -12.0 4.00  -270.0])
agent( pose [ 0.0 -12.0 5.00  -270.0])
agent( pose [ 0.0 -12.0 6.00  -270.0])
agent( pose [ 0.0 -12.0 7.00  -270.0])
agent( pose [ 0.0 -12.0 8.00  -270.0])
agent( pose [ 0.0 -12.0 9.00  -270.0])
agent( pose [ 0.0 -12.0 10.00  -270.0])
agent( pose [ 0.0 -12.0 11.00  -270.0])
agent( pose [ 0.0 -12.0 12.00  -270.0])
agent( pose [ 0.0 -12.0 13.00  -270.0])
agent( pose [ 0.0 -12.0 14.00  -270.0])
agent( pose [ 0.0 -12.0 15.00  -270.0])
agent( pose [ 0.0 -12.0 16.00  -270.0])
agent( pose [ 0.0 -12.0 17.00  -270.0])
agent( pose [ 0.0 -12.0 18.00  -270.0])
agent( pose [ 0.0 -12.0 19.00  -270.0])
agent( pose [ 0.0 -12.0 20.00  -270.0])
agent( pose [ 0.0 -12.0 21.00  -270.0])
agent( pose [ 0.0 -12.0 22.00  -270.0])
agent( pose [ 0.0 -12.0 23.00  -270.0])
agent( pose [ 0.0 -12.0 24.00  -270.0])
agent( pose [ 0.0 -12.0 25.00  -270.0])
agent( pose [ 0.0 -12.0 26.00  -270.0])
agent( pose [ 0.0 -12.0 27.00  -270.0])
agent( pose [ 0.0 -12.0 28.00  -270.0])
agent( pose [ 0.0 -12.0 29.00  -270.0])
agent( pose [ 0.0 -12.0 30.00  -270.0])
agent( pose [ 0.0 -12.0 31.00  -270.0])
agent( pose [ 0.0 -12.0 32.00  -270.0])
agent( pose [ 0.0 -12.0 33.00  -270.0])
agent( pose [ 0.0 -12.0 34.00  -270.0])
agent( pose [ 0.0 -12.0 35.00  -270.0])
agent( pose [ 0.0 -12.0 36.00  -270.0])
agent( pose [ 0.0 -12.0 37.00  -270.0])
agent( pose [ 0.0 -12.0 38.00  -270.0])
agent( pose [ 0.0 -12.0 39.00  -270.0])
agent( pose [ 0.0 -12.0 40.00  -270.0])
agent( pose [ 0.0 -12.0 41.00  -270.0])
agent( pose [ 0.0 -12.0 42.00  -270.0])
agent( pose [ 0.0 -12.0 43.00  -270.0])
agent( pose [ 0.0 -12.0 44.00  -270.0])
agent( pose [ 0.0 -12.0 45.00  -270.0])
agent( pose [ 0.0 -12.0 46.00  -270.0])
agent( pose [ 0.0 -12.0 47.00  -270.0])
agent( pose [ 0.0 -12.0 48.00  -270.0])
agent( pose [ 0.0 -12.0 49.00  -270.0])
agent( pose [ 0.0 -12.0 50.00  -270.0])


destiny( pose [ 0.000 0.000 0.000 0.000 ] color "green")